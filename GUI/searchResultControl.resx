<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picSP.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAANPSURBVHhe7ZrLaxNRFMbjAx/4QBAXuhAXGl3UjdqFGzfu
        BaEigkvBjdoiuBN05asb8R8QLOpCUHe2is0uuqiCEJqaydtHFoIKiloV43fgNFzP3LQ3zeSSK+cHH+nM
        PefMPd/cTjLJpBRFURRFURSlPc1mc1mpVBosFouHy+XykX4WzRHahzkv5el3B4odQ/NvoGZgqkdRdJTb
        WBxofsRSOCihh2FupzOwnHaiwC9ZMED9hNLcljtIumYUCV1XuC13sHSeWAoFKfQywW25g8SsLBSwstyW
        O5QkioQsNYDbcoeSRJGQpQZwW+5QkijSqR7h6nuGNWEZ9ynvBpzlMi1gwjlLnC95NSCLG5ElXKYF7YMJ
        zy3xPuTPADR5iUvEoDFbjgd5XQHXuUQMjN0Qsb7k1YCoUqms4jIt6vX6aowVRawveb8I3m40Gmu4VCqX
        y63Fvjsixqe8G0DXgvd4vUviv61xnuTfgD6TGsBtuUNJokjICs6AWegBrh0XoFHomRjvVOEYgGZn8Da6
        i6fRAmNDGPsq4x0VjAFThUJhE08hBsYHoQ9GvKv8G4Cz9c22fx5N5vP5dXz4tqDuAGLfityF5McATO4T
        NDJ3Fmu12hZs0//xQmbct316bAdit6Hma0uddvJiQAGT2sHp/4D9A1DVkkOm3cpkMss51Jnp6emNyHW9
        u+y5AU9xVjZwagx8FF6BmIcih5oftd06u4KVth51JmVdi3pqwE1qkNNi0D0BGh03c7D9B68XOaQrYMJK
        1Ltn1rcoeQOoCeg8h1uxLVNs/8brCQ5JBPr1GnXHzOMIJW7AD+g4h1qpVqubMalXIm+WfsLmkEShuuJY
        ppI1AI2d5DAriEkjRl70vmDfQQ5JHK8GzHcW0SRd8d+Z8dj+GEXRfg7pCX1hAPYfwPhnMxbN03cBuzmk
        Z3g1ADrFYS0wgUNo9rsZh+0ZvG7lkJ6CFXbaPLZQ4gbQQwcvoClDtocp6DtAM6ZXegnRnOTx55S4AaGp
        cwOwfB9bCgUp9DLObbmDxKuyUMC6zG25g6Q09F88JIUL5HZuqzOwdIYtBYMSvTtwO4uDHjZEobosHIBq
        0BC30R302ClWw14oiEdlcdL20Jx5+oqiKIqiKIoSI5X6Cy3SI+NQg2wcAAAAAElFTkSuQmCC
</value>
  </data>
</root>